{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","sortAlpabeticaly","setState","ALPHABET","sortByLength","LENGTH","reverse","reset","this","goodsSort","goods","visibleGoods","sort","product1","product2","localeCompare","length","getReorderedGoods","className","type","classNames","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAgDE,IAAME,EAAb,4MACEC,MAAe,CACbC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,iBAAmB,WACjB,EAAKC,SAAS,CAAEH,SAAUL,EAASS,YAPvC,EAUEC,aAAe,WACb,EAAKF,SAAS,CAAEH,SAAUL,EAASW,UAXvC,EAcEC,QAAU,WACR,EAAKJ,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBAhBzB,EAoBES,MAAQ,WACN,EAAKL,SAAS,CAAEH,SAAUL,EAASM,KAAMF,YAAY,KArBzD,4CAwBE,WACE,MAAiCU,KAAKX,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdU,EA9DH,SACLC,EADK,GAGJ,IADCX,EACF,EADEA,SAAUD,EACZ,EADYA,WAGNa,EAAY,YAAOD,GAEzB,OAAQX,GACN,KAAKL,EAASS,SACZQ,EAAaC,MAAK,SAACC,EAAUC,GAAX,OAChBD,EAASE,cAAcD,MACzB,MAEF,KAAKpB,EAASW,OACZM,EAAaC,MAAK,SAACC,EAAUC,GAAX,OAChBD,EAASG,OAASF,EAASE,UAG/B,KAAKtB,EAASM,MAShB,OAJIF,GACFa,EAAaL,UAGRK,EAmCaM,CAChBtB,EAAiB,CAAEI,WAAUD,eAG/B,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYrB,IAAaL,EAASS,WAEtCkB,QAASb,KAAKP,iBANhB,iCAWA,wBACEkB,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYrB,IAAaL,EAASW,SAEtCgB,QAASb,KAAKJ,aANhB,4BAWA,wBACEe,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAatB,IAEjBuB,QAASb,KAAKF,QANhB,sBAWER,GAAcC,IAAaL,EAASM,OACpC,wBACEmB,KAAK,SACLD,UAAU,4BACVG,QAASb,KAAKD,MAHhB,sBASJ,6BACGE,EAAUa,KAAI,SAACC,GAAD,OAAU,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,eA7E5C,GAAyBC,IAAMC,WC/D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9b2715e1.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((product1, product2) => (\n        product1.localeCompare(product2)));\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort((product1, product2) => (\n        product1.length - product2.length));\n      break;\n\n    case SortType.NONE:\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortAlpabeticaly = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  reset = () => {\n    this.setState({ sortType: SortType.NONE, isReversed: false });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const goodsSort = getReorderedGoods(\n      goodsFromServer, { sortType, isReversed },\n    );\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              { 'is-light': sortType !== SortType.ALPHABET },\n            )}\n            onClick={this.sortAlpabeticaly}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning',\n              { 'is-light': !isReversed },\n            )}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {(isReversed || sortType !== SortType.NONE) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n        <ul>\n          {goodsSort.map((good) => <li key={good} data-cy=\"Good\">{good}</li>)}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}